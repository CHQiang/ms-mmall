<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.mingsoft.mall.dao.IProductSpecificationsInventoryDao">

	<sql id="column_list">
		psi.psi_product_specifications_id,psi.psi_price,psi.psi_invertory,psi.psi_sale,psi.psi_code,psi.psi_productID,psi_sort
	</sql>

	<!-- 获取表字段开始 -->
	<resultMap
		type="net.mingsoft.mall.entity.ProductSpecificationsInventoryEntity"
		id="resultMap">
		<result column="psi_product_specifications_id" property="productSpecificationsId" /><!-- 
			与产品规格id绑定 -->
		<result column="psi_price" property="specificationsPrice" /><!-- 
			与产品规格价格绑定 -->
		<result column="psi_invertory" property="specificationsInvertory" /><!-- 
			与产品规格库存量绑定 -->
		<result column="psi_sale" property="specificationsSale" /><!-- 与产品规格销量绑定 -->
		<result column="psi_code" property="productSpecificationsInventoryCode" /><!-- 
			该产品规格 -->
		<result column="psi_productID" property="productId" /><!-- 该产品Id -->
		<result column="psi_sort" property="productSpecificationsInventorySort" />
	</resultMap>

	<!-- 根据栏目id查询商品规格列表结束 -->
	<resultMap id="resultProductSpecificationsInventoryMap"
		type="net.mingsoft.mall.entity.ProductSpecificationsInventoryEntity">
		<result column="psi_product_specifications_id" property="productSpecificationsId" /><!-- 
			与产品规格id绑定 -->
		<result column="psi_price" property="specificationsPrice" /><!-- 
			与产品规格价格绑定 -->
		<result column="psi_invertory" property="specificationsInvertory" /><!-- 
			与产品规格库存量绑定 -->
		<result column="psi_sale" property="specificationsSale" /><!-- 与产品规格销量绑定 -->
		<result column="psi_code" property="productSpecificationsInventoryCode" /><!-- 
			该产品规格 -->
		<result column="psi_productID" property="productId" /><!-- 该产品Id -->
		<result column="psi_sort" property="productSpecificationsInventorySort" />
		<!-- 一对一关联栏目 -->
		<association property="column" column="BASIC_CATEGORYID"
			javaType="com.mingsoft.basic.entity.ColumnEntity">
			<result property="columnPath" column="column_path" />
			<result property="categoryTitle" column="category_title" />
			<result property="categoryId" column="category_id" />
			<result property="columnContentModelId" column="COLUMN_CONTENTMODELID" />
			<result property="columnType" column="COLUMN_TYPE" />
		</association>

		<!-- 一对一关联栏目 -->
		<association property="product" column="psi_productID"
			javaType="net.mingsoft.mall.entity.ProductEntity">
			<result column="BASIC_ID" property="basicId" />					<!-- 与表basic绑定 自增长ID -->
			<result column="product_basicID" property="productId" />				<!-- 与产品表绑定id -->
			<result column="product_price" property="productPrice" />	<!-- 产品价格 -->
			<result column="product_inventory" property="productStock" />		<!-- 产品库存量 -->
			<result column="product_appId" property="productAppId" />		<!-- 产品所属appID -->
			<result column="product_code" property="productCode" />		<!-- 产品所属appID -->
			<result column="product_sale" property="productSale" />		<!-- 产品销量 -->
			<result column="product_linkUrl" property="productLinkUrl" />		<!-- 产品链接 -->
			<result column="product_cost_price" property="productCostPrice" />		<!-- 产品原价 -->
			<result column="product_shelf" property="productShelf" />		<!-- 产品是否下架 -->
			<result column="product_type" property="productType" />		<!-- 产品属性类型 -->
			<result column="BASIC_TITLE" property="basicTitle" />			<!-- 标题 -->
			<result column="BASIC_DESCRIPTION" property="basicDescription" /><!-- 
				描述 -->
			<result column="BASIC_THUMBNAILS" property="basicThumbnails" />	<!-- 缩略图 -->
			<result column="BASIC_HIT" property="basicHit" />				<!-- 文章点击次数 -->
			<result column="BASIC_DATETIME" property="basicDateTime" />		<!-- 发布时间 -->
			<result column="BASIC_UPDATETIME" property="basicUpdateTime" />	<!-- 更新时间 -->
			<result column="BASIC_PEOPLEID" property="basicPeopleId" />		<!-- 发布者id -->
			<result column="BASIC_CATEGORYID" property="basicCategoryId" />	<!-- 所属主栏目id -->
			<result column="BASIC_CATEGORYID" property="basicCategoryId" />	<!-- 所属主栏目id -->
			<result column="BASIC_MODELID" property="basicModelId" />	<!-- 所属主栏目id -->
			<result column="BASIC_SORT" property="basicSort" />	<!-- 商品顺序 -->
		</association>
	</resultMap>
	<!-- 根据栏目id查询商品规格列表 -->


	<!-- 增加产品规格库存信息开始 -->
	<insert id="saveEntity" useGeneratedKeys="true"
		keyProperty="productSpecificationsId"
		parameterType="net.mingsoft.mall.entity.ProductSpecificationsInventoryEntity">
		insert into mall_product_specifications_inventory
		<!-- 添加表字段 -->
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="productSpecificationsId != null">psi_product_specifications_id,</if>
			<if test="specificationsPrice !=null">psi_price,</if>
			<if test="specificationsInvertory !=null">psi_invertory,</if>
			<if test="specificationsSale !=null">psi_sale,</if>
			<if test="productSpecificationsInventoryCode !=null">psi_code,</if>
			<if test="productId !=null">psi_productID,</if>
			<if test="productSpecificationsInventorySort !=null">psi_sort,</if>
		</trim>

		<!-- 注入控制层字段 -->
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="productSpecificationsId != null">#{productSpecificationsId},</if>
			<if test="specificationsPrice !=null">#{specificationsPrice},</if>
			<if test="specificationsInvertory !=null">#{specificationsInvertory},</if>
			<if test="specificationsSale !=null">#{specificationsSale},</if>
			<if test="productSpecificationsInventoryCode !=null">#{productSpecificationsInventoryCode},</if>
			<if test="productId !=null">#{productId},</if>
			<if test="productSpecificationsInventorySort !=null">#{productSpecificationsInventorySort},</if>
		</trim>
	</insert>
	<!-- 增加产品规格库存信息结束 -->

	<!-- 更新产品规格库存信息开始 -->
	<update id="updateEntity" parameterType="com.mingsoft.base.entity.BaseEntity">
		update mall_product_specifications_inventory
		<set>
			<if test="specificationsPrice != null">psi_price=#{specificationsPrice},</if>
			<if test="specificationsSale != null">psi_sale=#{specificationsSale},</if>
			<if test="specificationsInvertory != null">psi_invertory=#{specificationsInvertory},</if>
			<if test="productSpecificationsInventoryCode != null">psi_code=#{productSpecificationsInventoryCode},</if>
			<if test="productSpecificationsInventorySort != null">psi_sort=#{productSpecificationsInventorySort},</if>
		</set>
		where psi_product_specifications_id = #{productSpecificationsId}
	</update>
	<!-- 更新产品规格库存信息结束 -->

	<!-- 获取产品规格库存信息开始 -->
	<select id="getEntity" resultMap="resultMap" parameterType="int">
		select
		<include refid="column_list" />
		from mall_product_specifications_inventory psi
		where
		psi.psi_product_specifications_id = #{productSpecificationsId}
	</select>
	<!-- 获取产品规格库存信息结束 -->

	<!-- 删除 产品规格库存信息开始 -->
	<delete id="deleteEntity" parameterType="int">
		delete from
		mall_product_specifications_inventory where
		psi_product_specifications_id = #{productSpecificationsId}
	</delete>
	<!-- 删除 产品规格库存信息结束 -->

	<!-- 根据产品ID删除产品规格库存信息开始 -->
	<delete id="deleteEntityByProductId" parameterType="int">
		delete from
		mall_product_specifications_inventory 
		<where>
			psi_productID in
			<foreach collection="productIds" item="item" index="index"
				open="(" separator="," close=")">#{item}</foreach>
		</where>
	</delete>
	<!-- 根据产品ID删除产品规格库存信息结束 -->

	<!-- 更新产品规格库存信息开始 -->
	<!-- 更新产品规格库存信息开始 -->
	<update id="updateSort" parameterType="com.mingsoft.base.entity.BaseEntity">
		update mall_product_specifications_inventory
		<set>
			<if test="productSpecificationsInventorySort != null">psi_sort=#{productSpecificationsInventorySort},</if>
		</set>
		where psi_product_specifications_id = #{productSpecificationsId}
	</update>
	<!-- 更新产品规格库存信息结束 -->

	<!-- 根据栏目id查询商品规格总数 -->
	<select id="getProducntSpecificationCountByColumnId" resultType="int">
		select count(*)
		from mall_product_specifications_inventory mpsi left
		join mall_product p
		on mpsi.psi_productID = p.product_basicID
		left join
		basic b on
		b.basic_id=p.product_basicID
		LEFT JOIN
		category c ON
		b.BASIC_CATEGORYID
		= c.CATEGORY_ID
		LEFT JOIN cms_column
		cl ON
		c.CATEGORY_ID =
		cl.COLUMN_CATEGORYID

		<where>
			<if test="whereMap!=null">
				<if test="whereMap.basicTitle!=null">
					basic_title like CONCAT("%",#{whereMap.basicTitle},"%")
				</if>
			</if>
			<if test="appId != null">and basic_appId=#{appId}</if>
			<if test="modelId != null">and basic_modelId = #{modelId}</if>
			<if test="categoryId != null">and basic_categoryId= #{categoryId}</if>
		</where>
	</select>
	<!-- 根据栏目id查询商品规格总数结束 -->


	<!-- 根据栏目id查询商品规格列表 -->
	<select id="queryProducntSpecificationByColumnId" resultMap="resultProductSpecificationsInventoryMap">
		select
		category_title,CONCAT(basic_title,func_parent_specifications_field(psi_product_specifications_id))
		as basic_title,psi_product_specifications_id,psi_productID,
		psi_product_specifications_id,psi_sort
		from
		mall_product_specifications_inventory mpsi left join mall_product p
		on
		mpsi.psi_productID = p.product_basicID
		left join basic b on
		b.basic_id=p.product_basicID
		LEFT JOIN
		category c ON b.BASIC_CATEGORYID
		= c.CATEGORY_ID
		LEFT JOIN cms_column
		cl ON c.CATEGORY_ID =
		cl.COLUMN_CATEGORYID
		<where>
			<if test="whereMap!=null">
				<if test="whereMap.basicTitle!=null">
					basic_title like CONCAT("%",#{whereMap.basicTitle},"%")
				</if>
			</if>
			<if test="appId != null">and basic_appId=#{appId}</if>
			<if test="modelId != null">and basic_modelId = #{modelId}</if>
			<if test="categoryId != null">and basic_categoryId= #{categoryId}</if>
			order by p.product_basicID desc
			<if test="page!=null">
				limit ${page.pageNo*page.pageSize},#{page.pageSize}
			</if>
		</where>
	</select>


	<select id="queryProducntSpecificationByProductId" resultMap="resultProductSpecificationsInventoryMap">
		select *
		from v_mall_specifications_product
		<where>
			<if test="appId != null">and basic_appId=#{appId}</if>
			<if test="modelId != null">and basic_modelId = #{modelId}</if>
			<if test="productId != null">and psi_productID= #{productId}</if>
		</where>
	</select>
	<!-- 根据栏目id查询商品规格列表结束 -->
</mapper>